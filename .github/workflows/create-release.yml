---
name: Create Release
on:
  workflow_dispatch:
jobs:
  find_some_body:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
    outputs:
      final_release_body: ${{ steps.compare.outputs.final_release_body }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get latest release with body
        id: get_latest_release_with_body
        run: |
          releases=$(gh release list --limit 100 --json tagName --jq '.[] | select(.tagName != null) | .tagName')
          for tag in $releases; do
            body=$(gh release view "$tag" --json body -q '.body')
            if [ -n "$body" ]; then
              break
            fi
          done
          echo "latest_release_body=$body" >> $GITHUB_STATE
      - name: Compare release notes
        id: compare
        run: |-
          current_release_body=$(cat Release_changes.md)
          if [ "$current_release_body" == "$latest_release_body" ]; then
            echo "body_path=" >> $GITHUB_OUTPUT
          else
            echo "final_release_body=$current_release_body" >> $GITHUB_OUTPUT
          fi
  create_release:
    runs-on: ubuntu-latest
    needs: find_some_body
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || sudo apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
      - name: Download Windows App
        run: gh run download --repo ${{ github.repository }} --name Apps-Purchases-windows-latest
          --dir ./dist/windows-latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Download Linux App
        run: gh run download --repo ${{ github.repository }} --name Apps-Purchases-ubuntu-latest
          --dir ./dist/ubuntu-latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Download macOS App
        run: gh run download --repo ${{ github.repository }} --name Apps-Purchases-macos-latest
          --dir ./dist/macos-latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Set current date
        id: set_current_date
        run: echo "current_date=$(date +v%Y.%m.%d.%H.%M.%S)" >> $GITHUB_STATE
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: $current_date
          release_name: $current_date
          body: ${{ needs.find_some_body.outputs.final_release_body }}
          draft: false
          prerelease: false
      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows-latest/Apps-Purchases.exe
          asset_name: Apps-Purchases-Windows.exe
          asset_content_type: application/octet-stream
      - name: Upload macOS artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/macos-latest/Apps-Purchases
          asset_name: Apps-Purchases-macOS
          asset_content_type: application/octet-stream
      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ubuntu-latest/Apps-Purchases
          asset_name: Apps-Purchases-ubuntu
          asset_content_type: application/octet-stream
